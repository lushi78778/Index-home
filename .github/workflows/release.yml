name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Prepare config (fallback to example)
        run: |
          if [ ! -f config.yaml ]; then
            cp config.example.yaml config.yaml
          fi

      - name: Generate config
        run: npm run config

      - name: Typecheck
        run: npm run typecheck

      - name: Unit tests
        run: npm test --silent

      - name: Build
        run: npm run build --silent

      - name: Pack build artifact
        id: pack
        run: |
          NAME="index-home-${GITHUB_REF_NAME}.tar.gz"
          tar -czf "$NAME" \
            .next \
            public \
            package.json \
            package-lock.json \
            next.config.mjs \
            middleware.ts \
            README.md \
            Dockerfile \
            docker-compose.yml \
            Makefile
          echo "file=$NAME" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: ${{ steps.pack.outputs.file }}
          generate_release_notes: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Extract Docker metadata
        id: docker-meta
        uses: docker/metadata-action@v5
        with:
          images: docker.io/lushi78778/index-home
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDTIME=${{ fromJSON(steps.docker-meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.docker-meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.docker-meta.outputs.json).labels['org.opencontainers.image.revision'] }}

      - name: Update Docker Hub description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          repository: lushi78778/index-home
          readme-filepath: ./docker/README.md
          short-description: "Next.js 14 内容门户系统，支持语雀集成、MDX 内容、PWA 等功能"
        continue-on-error: true
